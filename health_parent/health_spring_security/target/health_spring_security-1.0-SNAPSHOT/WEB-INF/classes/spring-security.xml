<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc.xsd
						http://code.alibabatech.com/schema/dubbo
						http://code.alibabatech.com/schema/dubbo/dubbo.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
                          http://www.springframework.org/schema/security
                          http://www.springframework.org/schema/security/spring-security.xsd">

    <!--包扫描-->
    <context:component-scan base-package="com.itheima"/>

    <!--设置匿名访问的路径 -->
    <security:http security="none" pattern="/css/**"/>
    <security:http security="none" pattern="/js/**"/>
    <security:http security="none" pattern="/login.html"/>


    <!--拦截所有请求 必须登录才可以访问index.jsp
    auto-config：spring securtiy框架会自动生成登录页面 提供默认的登录请求 等
    use-expressions：使用表达式 springEL
    -->
    <security:http auto-config="true" use-expressions="true">
        <!--拦截规则配置 /**拦截所有请求 http://localhost:8080/a/b/c hasRole:指定需要ROLE_ADMIN权限才可以访问/**路径-->
        <!--配置多种校验规则测试-->
        <!--登录配置
       login-processing-url：跟页面配置请求路径一样
       username-parameter：跟页面表单账号名称保持一致,若是页面为username,则不需要再声明
       password-parameter：跟页面表单密码名称保持一致,若页面为password,则不需要再声明
       authentication-success-forward-url：登录成功后页面
       authentication-failure-forward-url:登录失败跳登录页面
       login-page：登录页面
       default-target-url:默认跳转页面
       -->
        <security:form-login login-processing-url="/login.do" username-parameter="username" password-parameter="password"
                             default-target-url="/success.html" authentication-failure-forward-url="/login.html" login-page="/login.html"/>
        <security:intercept-url pattern="/**" access="hasAnyRole('ROLE_ADMIN')"/>

        <!--403 - Forbidden：被禁止  csrf:禁用(了解) 只需要禁用即可  跨站请求伪造-->
        <security:csrf disabled="true"/>

        <!--logout：退出登录logout-url：退出登录操作对应的请求路径,logout-success-url：退出登录后的跳转页面 -->
        <security:logout logout-url="/logout.do"
                         logout-success-url="/login.html" invalidate-session="true"/>
    </security:http>


    <!--配置密码加密对象-->
    <bean id="passwordEncoder"
          class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

    <!--配置认证管理器-->
    <!--这是spring security框架官方提供的入门认证案例 需要角色权限
    {noop}:配置未加密认证
    -->
   <!-- <security:authentication-manager>
        <security:authentication-provider>
           <security:user-service>
               <security:user name="admin" password="{noop}admin" authorities="ROLE_ADMIN"/>
           </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>-->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="userService">
            <!--指定密码加密策略-->
            <security:password-encoder ref="passwordEncoder" />
        </security:authentication-provider>
    </security:authentication-manager>



</beans>